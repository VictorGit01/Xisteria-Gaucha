// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        googlePlayServicesVersion = "+"
        firebaseMessagingVersion = "+"
        // Comentado dia 22/11/2020 para resolver o error do react-native-fetch-blob ao criar o apk do app.
        buildToolsVersion = "28.0.3"
        // buildToolsVersion = "29.0.2"
        minSdkVersion = 16
        compileSdkVersion = 28
        // compileSdkVersion = 29
        targetSdkVersion = 28
        // targetSdkVersion = 29
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath("com.android.tools.build:gradle:3.4.+")
        // Comentado dia 20/11/2020 para testar o outro banco de dados:
        // classpath('com.google.gms:google-services:4.3.3')
        classpath("com.google.gms:google-services:4.3.4")
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }

        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

// Estou inserindo dia 23/11/2020 para corrigir o erro com o async-storage ao tentar gerar o apk.
// subprojects {
//     afterEvaluate {project ->
//         if (project.hasProperty("android")) {
//             android {
//                 compileSdkVersion 28 // have to match with build.gradle and app/build.gradle ones
//                 buildToolsVersion '28.0.3' // have to match with build.gradle and app/build.gradle ones
//                 variantFilter { variant ->
//                     def names = variant.flavors*.name
//                     // To check for a certain build type, use variant.buildType.name == "<buildTypes>"
//                     if (names.contains("reactNative51") || names.contains("reactNative55") || names.contains("reactNative56")) {
//                         // Gradle ignores any variants that satisfy the conditions above.
//                         setIgnore(true)
//                     }
//                 }
//             }
//         }
//     }
// }